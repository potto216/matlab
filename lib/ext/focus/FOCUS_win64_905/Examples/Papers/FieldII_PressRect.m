function [press,Th]=FieldII_PressRect(f0, fs, c, width, height, x, y, z, ndiv)
% FieldII_PressRect Calculates the continuous-wave pressure generated by
% the FIELD II program for a rectangular piston
% Refer: http://www.es.oersted.dtu.dk/staff/jaj/field
%
%   Usage: [press_field,Th]=FieldII_PressRect(f0, fs, c, width, height, x, y, z, ndiv)
%   f0 - The central frequency of the pulse. Unit: Hz
%   fs - The sampling frequency. Unit: Hz
%   c  - The speed of sound. Unit: m/s
%   width - The width of the rectangular source (x direction), unit:m
%   height- The height of the rectangular source (y direction),unit:m
%   x - The x grid of the observation grid. Unit: m
%   y - The y grid of the observation grid. Unit: m
%   z - The z grid of the observation grid. Unit: m
%   ndiv - Number of subdivisions in the width and height direction of the rectangular source
%
%   Copyright 2009 MSU
%   $Vision: 1.0 $  $Date: 2009/05/19 $

% use rectangular
set_field('use_rectangles',1);
set_field('use_triangles',0);
% set the sampling frequency and the speed of sound
set_field('c',c);
set_field('fs',fs);

% lambda = c/f0  %% changed
% width = 5 * lambda; % transducer width
% height = 7.5 * lambda; % transducer height

% hwidth = width/2;
% hheight = height/2;
% % Define the transducer
% rect = [1 -hwidth hheight 0  hwidth hheight 0  hwidth -hheight 0  -hwidth -hheight 0  1 width height 0 0 0];
% center=[0 0 0];
% focus = [0 0 1000];
% Th = xdc_rectangles(rect,center,focus);
% % xdc_focus(Th,0,focus);

kerf=0;
N_elements=1;
focus=[0 0 10000];
% the subdivision in the x and y directions are the same
Th = xdc_linear_array (N_elements, width, height, kerf, ndiv, ndiv, focus);
xdc_focus(Th,0,focus);

%%########### This part for the impulse response+
xlen = max(size(x,1),size(x,2));
ylen = max(size(y,1),size(y,2));
zlen = max(size(z,1),size(z,2));
for ix = 1:xlen
    for iy = 1:ylen
        for iz = 1:zlen
            points = [x(ix)  y(iy)  z(iz)];
            [h,start_time] = calc_h(Th,points); 
            t = start_time:1/fs:start_time+(length(h)-1)/fs;
            t = t';          
            F_impulse = sum(h.*exp(-i*2*pi*f0*t))*1/fs;   %% 1/fs is the interval of integrand  
            press(ix,iy,iz) = F_impulse;    
        end
    end
end

% just normalized by 'rho*c'
%  press_field = 2*pi*f0*press_field*fs;
press = 2*pi*press*f0*1000*1j;