% Script to evaluate the times and errors for the CW pressure generated by
% a rectangular piston using the Field II method.
% Refer: http://www.es.oersted.dtu.dk/staff/jaj/field
clc;
fprintf('==============================[ FieldIIrect.m ]==============================\n\n');
fprintf('This example evaluates the times and errors for the continuous-wave pressure\n');
fprintf('generated by a rectangular transducer using Field II. You must have Field II\n');
fprintf('installed to run this example.\n\n')
field_init(0);

datestr(now)

f0 = 1e6; % excitation frequency
fs = 100e6; % sampling frequency unit:Hz
atten = 0; % no attenuation
soundspeed = 1500; % m/s
lambda = soundspeed / f0; % wavelength
width = 5 * lambda; % transducer width
height = 7.5 * lambda; % transducer height

% create the data structure that specifies the attenuation value, etc.
define_media

% define the computational grid
xmin = 0;
xmax = 1.5 * width/2;
ymin = 0;
ymax = 0.01;
zmin = 0.01*(width/2)^2 / lambda;
zmax = (width/2)^2 / lambda;
nx = 61;
ny = 61;
nz = 101;

% nx = 2;
% ny = 2;
% nz = 2;

dx = xmax / (nx - 1);
dz = zmax / (nz - 1);
ps = set_coordinate_grid([dx 0.1 dz],xmin,xmax,ymin,ymax,zmin,zmax);
x = xmin:dx:xmax;
y = ymin:0.1:ymax;
z = zmin:dz:zmax;

% [press] = FieldII_PressRect(f0,fs,soundspeed,0,x,y,z);
% press = squeeze(press)

% create the transducer object
transducer=get_rect(width, height, [0 0 0 ], [0 0 0]);
% generate the reference pressure field
ndiv = 200;
dflag = 0;
tic
pref=fnm_call(transducer,ps,lossless,ndiv,f0,dflag);
pref=squeeze(pref);
toc

% evaluate the times and errors as a function of the number of abscissas
ndivmtx = 20:10:100;
timevectorFieldIIrect = zeros(1, length(ndivmtx));
errorvectorFieldIIrect = zeros(1, length(ndivmtx));
% for ndiv = 1:100,
for in = 1:length(ndivmtx),
%    ndiv
    ndiv = ndivmtx(in);
	tic
	p = FieldII_PressRect(f0,fs,soundspeed,width,height,x,y,z,ndiv);
    p = squeeze(p);
	timevectorFieldIIrect(in) = toc;
	errorvectorFieldIIrect(in) = max(max(abs(pref - p)))/max(max(abs(pref)));
end


% show the pressure field
figure(1)
mesh(z, x, abs(squeeze(pref))/max(max(abs(squeeze(pref)))))
xlabel('z (m)')
ylabel('x (m)')
zlabel('normalized pressure')

% plot the times
figure(2)
plot(ndivmtx,timevectorFieldIIrect,'--rs')
ylabel('time (s)')
xlabel('subdivisions in one direction')

% plot the errors
figure(3)
semilogy(ndivmtx,errorvectorFieldIIrect,'--rs')
xlabel('subdivisions in one direction')
ylabel('normalized error')

% plot the errors as a function of time
figure(4)
semilogy(timevectorFieldIIrect, errorvectorFieldIIrect, '--rs')
xlabel('time (s)')
ylabel('normalized error')

datestr(now)

field_end;
