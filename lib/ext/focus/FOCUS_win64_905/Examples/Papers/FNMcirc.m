% Script to evaluate the times and errors as in the FNM circle paper 
% R. J. McGough, T. V. Samulski and J. F. Kelly. "An efficient grid sectoring method for calculations of the near-field pressure generated by a circular piston." J. Acoust. Soc. Am. 115, 1942ï¿½1954 (2004).
clc;
fprintf('=================================[ FNMcirc.m ]=================================\n\n');
fprintf('This example calculates the continuous-wave pressure for a circular transducer\n');
fprintf('using the Fast Nearfield Method. It will output a plot of the pressure, the\n');
fprintf('error of the calculation compared to the number of abscissas, the number of\n');
fprintf('abscissas compared to the execution time, and the error compared to the\n');
fprintf('execution time. These figures were used in the FNM circle paper published in\n');
fprintf('JASA in 2004.\n\n');

f0 = 1e6; % excitation frequency
% atten = 0; % no attenuation
soundspeed = 1500; % m/s
lambda = soundspeed / f0; % wavelength
radius = 5 * lambda; % transducer radius

% create the transducer object
transducer=get_circ(radius,[0 0 0 ], [0 0 0]);

% create the data structure that specifies the attenuation value, etc.
lossless = set_medium('lossless');

% define the computational grid
xmin = 0;
xmax = 1.5 * radius;
ymin = 0;
ymax = 0;
zmin = 0.0;
zmax = radius^2 / lambda;
nx = 61;
ny = 61;
nz = 101;
dx = xmax / (nx - 1);
dz = zmax / (nz - 1);

x = xmin:dx:xmax;
y = ymin:0:ymax;
z = zmin:dz:zmax;
coordinates = set_coordinate_grid([dx 0 dz],xmin,xmax,ymin,ymax,zmin,zmax);

% generate the reference pressure field
ndiv = 200;
dflag = 0;
tic
pref = fnm_call(transducer, coordinates, lossless, ndiv, f0, dflag);
toc

% evaluate the times and errors as a function of the number of abscissas
timevectorFNMcirc = zeros(1, 200);
errorvectorFNMcirc = zeros(1, 200);
for ndiv = 1:200,
%    ndiv
	tic
	p = fnm_call(transducer, coordinates, lossless, ndiv, f0, dflag);
	timevectorFNMcirc(ndiv) = toc;
	errorvectorFNMcirc(ndiv) = max(max(abs(pref - p)))/max(max(abs(pref)));
end


% show the pressure field
figure(1)
mesh(z, x, abs(squeeze(pref))/max(max(abs(squeeze(pref)))))
xlabel('axial distance (m)')
ylabel('radial distance (m)')
zlabel('normalized pressure')

% plot the times
figure(2)
plot(timevectorFNMcirc)
ylabel('time (s)')
xlabel('number of abscissas')

% plot the errors
figure(3)
semilogy(errorvectorFNMcirc)
xlabel('number of abscissas')
ylabel('normalized error')

% plot the errors as a function of time
figure(4)
semilogy(timevectorFNMcirc, errorvectorFNMcirc)
xlabel('time (s)')
ylabel('normalized error')

datestr(now)
